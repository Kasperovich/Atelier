<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_Atelier_Models_AtelierContextDataSet2" targetNamespace="http://tempuri.org/_Atelier_Models_AtelierContextDataSet2.xsd" xmlns:mstns="http://tempuri.org/_Atelier_Models_AtelierContextDataSet2.xsd" xmlns="http://tempuri.org/_Atelier_Models_AtelierContextDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Atelier_Models_AtelierContextConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Atelier_Models_AtelierContextConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Atelier.Properties.Settings.GlobalReference.Default.Atelier_Models_AtelierContextConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkersTableAdapter" GeneratorDataComponentClassName="WorkersTableAdapter" Name="Workers" UserDataComponentName="WorkersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Atelier_Models_AtelierContextConnectionString (Settings)" DbObjectName="[Atelier.Models.AtelierContext].dbo.Workers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Workers] WHERE (([WorkerId] = @Original_WorkerId) AND ([Code] = @Original_Code))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Workers] ([FIO], [Code]) VALUES (@FIO, @Code);
SELECT WorkerId, FIO, Code FROM Workers WHERE (WorkerId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT WorkerId, FIO, Code FROM dbo.Workers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Workers] SET [FIO] = @FIO, [Code] = @Code WHERE (([WorkerId] = @Original_WorkerId) AND ([Code] = @Original_Code));
SELECT WorkerId, FIO, Code FROM Workers WHERE (WorkerId = @WorkerId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FIO" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FIO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="WorkerId" ColumnName="WorkerId" DataSourceName="[Atelier.Models.AtelierContext].dbo.Workers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@WorkerId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="WorkerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="WorkerId" DataSetColumn="WorkerId" />
              <Mapping SourceColumn="FIO" DataSetColumn="FIO" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_Atelier_Models_AtelierContextDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="_Atelier_Models_AtelierContextDataSet2" msprop:Generator_UserDSName="_Atelier_Models_AtelierContextDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Workers" msprop:Generator_TableClassName="WorkersDataTable" msprop:Generator_TableVarName="tableWorkers" msprop:Generator_TablePropName="Workers" msprop:Generator_RowDeletingName="WorkersRowDeleting" msprop:Generator_RowChangingName="WorkersRowChanging" msprop:Generator_RowEvHandlerName="WorkersRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkersRowDeleted" msprop:Generator_UserTableName="Workers" msprop:Generator_RowChangedName="WorkersRowChanged" msprop:Generator_RowEvArgName="WorkersRowChangeEvent" msprop:Generator_RowClassName="WorkersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="WorkerId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnWorkerId" msprop:Generator_ColumnPropNameInRow="WorkerId" msprop:Generator_ColumnPropNameInTable="WorkerIdColumn" msprop:Generator_UserColumnName="WorkerId" type="xs:int" />
              <xs:element name="FIO" msprop:Generator_ColumnVarNameInTable="columnFIO" msprop:Generator_ColumnPropNameInRow="FIO" msprop:Generator_ColumnPropNameInTable="FIOColumn" msprop:Generator_UserColumnName="FIO" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Code" msprop:Generator_ColumnVarNameInTable="columnCode" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_UserColumnName="Code" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Workers" />
      <xs:field xpath="mstns:WorkerId" />
    </xs:unique>
  </xs:element>
</xs:schema>